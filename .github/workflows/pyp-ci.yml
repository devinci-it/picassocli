name: Deploy Python Package to PyPI

# This workflow is triggered when a tag matching the pattern `v*.*.*` is pushed.
# It sets up Python 3.11.4, installs dependencies, builds the package, and uploads it to PyPI.
# For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

on:
  push:
    tags:
      - 'v*.*.*'  
      # Trigger deployment on version tag pushes (e.g., v1.0.0)

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      # Checks out the code from the repository to the runner

    - name: Set up Python 3.11.4
      uses: actions/setup-python@v3
      with:
        python-version: '3.11.4'
      # Sets up Python 3.11.4 for the workflow

    - name: Upgrade pip and install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
        python -m pip install --upgrade setuptools wheel twine
      # Upgrades pip, installs dependencies from requirements.txt if it exists, and installs/updates setuptools, wheel, and twine

    - name: Build the package
      run: |
        python setup.py sdist bdist_wheel --universal
      # Builds the source distribution and wheel files for the package

    - name: Upload to PyPI
      env:
        TWINE_USERNAME: "__token__"
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        python -m twine upload --repository pypi dist/*
      # Uploads the built package to PyPI using Twine
    
    - name: Clean up build and dist directories
      run: |
        rm -rf build dist
      # Removes the build and dist directories to clean up after the build process

# Author: devinci-it, 2024

